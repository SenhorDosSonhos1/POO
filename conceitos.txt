# üöÄ Roadmap de Estudos: C# ao Backend com ASP.NET

## ‚úÖ T√≥picos Estudados
- [x] Relembrar conceitos C# b√°sico
- [x] POO
- [ ] Estrutura de dados
- [ ] Conex√£o ao DB (ADO.NET)
- [x] Entity Framework
- [x] ASP.NET Core
- [ ] API (Web API REST)
- [ ] Docker

---

## üìò Conceitos Fundamentais

### üîπ POO (Programa√ß√£o Orientada a Objetos)
> Paradigma de programa√ß√£o que organiza o software em unidades chamadas objetos.

#### ‚öôÔ∏è Caracter√≠sticas
- Reutiliza√ß√£o de c√≥digo
- Facilidade de manuten√ß√£o
- Encapsulamento

#### üß± Pilares da POO
- **Abstra√ß√£o**
- **Encapsulamento**
- **Heran√ßa**
- **Polimorfismo**

---

## üß© Elementos da POO

### üì¶ Classe
Molde para criar objetos. Exemplo: `Carro`, `Pessoa`.

### üéØ Objeto
Inst√¢ncia concreta de uma classe.

### üìù Atributos
Caracter√≠sticas dos objetos definidos na classe.

### üîß M√©todos
Fun√ß√µes/a√ß√µes que os objetos podem executar.

---

## üîê Encapsulamento
> Controla a visibilidade de atributos e m√©todos.

### üõ°Ô∏è Modificadores de Acesso:
- `public`: acess√≠vel de qualquer lugar
- `private`: acess√≠vel somente na pr√≥pria classe
- `protected`: acess√≠vel na classe e em subclasses

### üß™ Get e Set
- `get`: retorna o valor de um atributo
- `set`: define o valor de um atributo

---

## üèóÔ∏è Construtores
> M√©todo especial chamado automaticamente ao instanciar um objeto.  
Serve para **inicializar** o estado do objeto.

---

## ‚ö° Atributos e M√©todos Est√°ticos
> Pertencem √† pr√≥pria classe, e **n√£o** exigem inst√¢ncia para serem acessados.

---

## üë®‚Äçüë©‚Äçüëß Heran√ßa
> Permite que uma classe herde caracter√≠sticas de outra.

```csharp
class Pessoa {
    public string Nome;
}

class Aluno : Pessoa {
    public int Matricula;
}
